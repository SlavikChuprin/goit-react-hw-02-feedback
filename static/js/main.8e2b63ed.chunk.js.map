{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","s","notification","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Statistics","onTotal","onPositivePercentage","total","positivePercentage","statisticsList","statisticsListItem","good","neutral","bad","statisticsListItemTotal","statisticsListItemPositive","Section","title","onIncrement","state","section","App","handleIncrement","e","btnName","currentTarget","outerText","setState","prevState","totalScore","Object","values","reduce","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e2b63ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__7E29O\",\"statisticsListItemTotal\":\"Statistics_statisticsListItemTotal__348QD\",\"statisticsListItemPositive\":\"Statistics_statisticsListItemPositive__2PCNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__271GL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2hMHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1EvL_\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({message}) => {\r\n  return (\r\n       \r\n    <p className={s.notification}>{message}</p>\r\n   \r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\nmessage:PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport s from './FeedbackOptions.module.css';\r\n\r\n const FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n\r\n  return (\r\n    <div>\r\n      { options.map(option=> ( <button type='button' className={s.button} onClick={onLeaveFeedback}>{option}</button>))}\r\n    \r\n   </div>\r\n  );\r\n}\r\n\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport s from './Statistics.module.css';\r\n\r\n\r\nexport default function Statistics({options, onTotal, onPositivePercentage}) {\r\nconst total = onTotal(options);\r\nconst positivePercentage = onPositivePercentage(options);\r\n    return (\r\n     \r\n        <ul className={s.statisticsList}>\r\n\r\n        <li className={s.statisticsListItem}>Good: {options.good} </li>\r\n        <li className={s.statisticsListItem}>Neutral: {options.neutral} </li>\r\n        <li className={s.statisticsListItem}>Bad: {options.bad}</li>\r\n        <li className={s.statisticsListItemTotal}>Total: {total}</li>\r\n        <li className={s.statisticsListItemPositive}>Positiv feedback: {positivePercentage}%</li>\r\n        </ul>\r\n    \r\n        \r\n    );\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\nimport Notification from '../Notification';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\n\r\nconst Section = ({title, onIncrement, state, onTotal, onPositivePercentage} ) => {\r\n  return (\r\n    <div>\r\n    <section className={s.section}>{title[0]}\r\n    \r\n    <FeedbackOptions options={['good','neutral','bad']} onLeaveFeedback={onIncrement}/>\r\n    \r\n    </section>\r\n   \r\n   <section className={s.section}>{onTotal(state) === 0 ? '' : title[1]}\r\n    {onTotal(state) === 0  ? <Notification message=\"No feedback given...\"/> : <Statistics options= {state} onTotal={onTotal} onPositivePercentage={onPositivePercentage} />  }\r\n    </section>\r\n   </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title:PropTypes.array.isRequired,\r\n  onIncrement: PropTypes.func.isRequired,\r\n  state: PropTypes.object.isRequired,\r\n  onTotal: PropTypes.func.isRequired,\r\n  onPositivePercentage:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './components/Section';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = { \r\n    good: 0,\r\n    neutral:0,\r\n    bad:0,\r\n  };\r\n\r\n  handleIncrement = (e) => {\r\n                   \r\n       const  btnName =e.currentTarget.outerText; \r\n         \r\n            this.setState( prevState => ({\r\n                [btnName] : prevState[btnName] + 1,  \r\n            }));\r\n         \r\n  };\r\n\r\n  totalScore = (state) => Object.values(this.state).reduce((total, option)=>(total+=option),0);\r\n  positivePercentage = (state)=> Math.round((this.state.good/this.totalScore())*100);\r\nrender () {\r\n \r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Section title={[\"Please leave feedback\", \"Statistics\"]} \r\n       onIncrement= {this.handleIncrement} \r\n      state={this.state}\r\n      onTotal= {this.totalScore} \r\n      onPositivePercentage={this.positivePercentage}\r\n            \r\n      />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}