{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Statistics","onTotal","onPositivePercentage","total","positivePercentage","statisticsList","statisticsListItem","good","neutral","bad","statisticsListItemTotal","statisticsListItemPositive","Notification","message","notification","App","state","handleIncrement","e","btnName","currentTarget","outerText","setState","prevState","totalScore","Object","values","reduce","Math","round","nameButton","keys","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,wBAA0B,4CAA4C,2BAA6B,iD,qBCAzKD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,+LCgBlBC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACGJ,EACAC,M,gBCiBQI,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLR,UAAWC,IAAEQ,OACbC,QAASL,EAHX,SAMGE,GAFIA,S,gBCRA,SAASI,EAAT,GAAiE,IAA3CP,EAA0C,EAA1CA,QAASQ,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,qBAC/CC,EAAQF,EAAQR,GAChBW,EAAqBF,EAAqBT,GAChD,OACE,qBAAIJ,UAAWC,IAAEe,eAAjB,UACE,qBAAIhB,UAAWC,IAAEgB,mBAAjB,mBAA4Cb,EAAQc,KAApD,OACA,qBAAIlB,UAAWC,IAAEgB,mBAAjB,sBAA+Cb,EAAQe,QAAvD,OACA,qBAAInB,UAAWC,IAAEgB,mBAAjB,kBAA2Cb,EAAQgB,OACnD,qBAAIpB,UAAWC,IAAEoB,wBAAjB,oBAAkDP,KAClD,qBAAId,UAAWC,IAAEqB,2BAAjB,+BACqBP,EADrB,U,qBCGSQ,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAEE,mBAAGxB,UAAWC,IAAEwB,aAAhB,SAA+BD,KCAdE,E,4MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,SAAAC,GAChB,IAAMC,EAAUD,EAAEE,cAAcC,UAEhC,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAUI,EAAUJ,GAAW,O,EAIpCK,WAAa,SAAAR,GAAK,OAChBS,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAACxB,EAAOP,GAAR,OAAoBO,EAASP,IAAS,I,EAEzEQ,mBAAqB,SAAAY,GAAK,OACxBY,KAAKC,MAAO,EAAKb,MAAMT,KAAO,EAAKiB,aAAgB,M,4CACrD,WACE,IAAMM,EAAaL,OAAOM,KAAKC,KAAKhB,OACpC,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASqC,EACTpC,gBAAiBsC,KAAKf,oBAIO,IAAhCe,KAAKR,WAAWQ,KAAKhB,OACpB,cAAC,EAAD,CAAcH,QAAQ,yBAEtB,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACE,cAACa,EAAD,CACEP,QAASuC,KAAKhB,MACdf,QAAS+B,KAAKR,WACdtB,qBAAsB8B,KAAK5B,8B,GAtCR6B,aCKlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a4820eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__7E29O\",\"statisticsListItemTotal\":\"Statistics_statisticsListItemTotal__348QD\",\"statisticsListItemPositive\":\"Statistics_statisticsListItemPositive__2PCNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__271GL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1EvL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2hMHt\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          onClick={onLeaveFeedback}\r\n          key={option}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({ options, onTotal, onPositivePercentage }) {\r\n  const total = onTotal(options);\r\n  const positivePercentage = onPositivePercentage(options);\r\n  return (\r\n    <ul className={s.statisticsList}>\r\n      <li className={s.statisticsListItem}>Good: {options.good} </li>\r\n      <li className={s.statisticsListItem}>Neutral: {options.neutral} </li>\r\n      <li className={s.statisticsListItem}>Bad: {options.bad}</li>\r\n      <li className={s.statisticsListItemTotal}>Total: {total}</li>\r\n      <li className={s.statisticsListItemPositive}>\r\n        Positiv feedback: {positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onTotal: PropTypes.func.isRequired,\r\n  onPositivePercentage: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({message}) => {\r\n  return (\r\n       \r\n    <p className={s.notification}>{message}</p>\r\n   \r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\nmessage:PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrement = e => {\r\n    const btnName = e.currentTarget.outerText;\r\n\r\n    this.setState(prevState => ({\r\n      [btnName]: prevState[btnName] + 1,\r\n    }));\r\n  };\r\n\r\n  totalScore = state =>\r\n    Object.values(this.state).reduce((total, option) => (total += option), 0);\r\n\r\n  positivePercentage = state =>\r\n    Math.round((this.state.good / this.totalScore()) * 100);\r\n  render() {\r\n    const nameButton = Object.keys(this.state);\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={nameButton}\r\n            onLeaveFeedback={this.handleIncrement}\r\n          />\r\n        </Section>\r\n\r\n        {this.totalScore(this.state) === 0 ? (\r\n          <Notification message=\"No feedback given...\" />\r\n        ) : (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              options={this.state}\r\n              onTotal={this.totalScore}\r\n              onPositivePercentage={this.positivePercentage}\r\n            />\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}